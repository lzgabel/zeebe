# This workflow will auto merge a PR authored by dependabot[bot]. It runs only on open PRs ready for
# review.
#
# It will merge the PR only if: it is authored by dependabot[bot], is a patch semantic update, and
# all CI checks are successful (ignoring the soon-to-be-removed Jenkins check).
#
# The workflow is divided into multiple sequential jobs to allow giving only minimal permissions to
# the GitHub token passed around.
#
# Once we're using the merge queue feature, I think we can simplify this workflow a lot by relying
# on dependabot merging PRs via its commands, as it will always wait for checks to be green before
# merging.
name: Dependabot auto-merge updates
on:
  pull_request:
    types:
      - ready_for_review
      - opened
      - reopened
      - synchronize

permissions:
  checks: read
  pull-requests: write

jobs:
  auto-merge:
    name: Auto-merge dependabot PRs
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'camunda/zeebe' && github.actor == 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v3
      - id: metadata
        name: Fetch dependency metadata
        uses: dependabot/fetch-metadata@v1.3.4
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - id: await-tests
        name: Wait until select checks are green
        # change this condition if you wish to merge other type of version updates
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' }}
        uses: 'lewagon/wait-on-check-action@v1.1.2'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          wait-interval: 30
          check-regexp: '(Test summary)|(Java checks)|(Go linting)|(Docker checks)|(CodeQL)'
          allowed-conclusions: success,skipped
          verbose: true
      - id: approve-and-merge
        name: Approve and merge PR
        # required to skip if the previous step was also skipped
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' }}
        run: gh pr review ${{ github.event.pull_request.number }} --approve -b "bors merge"
        env:
          GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
